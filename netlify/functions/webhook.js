const axios = require('axios');

exports.handler = async (event, context) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
  if (event.httpMethod === 'POST') {
    const paymentData = JSON.parse(event.body);
    console.log('Received payment data:', paymentData);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Å–≤—è–∑–∞–Ω–æ —Å —É—Å–ø–µ—à–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º
    if (paymentData.event === 'payment.succeeded') {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ metadata –ø–ª–∞—Ç–µ–∂–∞
      const { phoneNumber, guestCount, orderTime, comment, orderId, cartItems } = paymentData.object.metadata;
      let totalPrice = paymentData.object.amount.value;

      const parsedCartItems = cartItems ? JSON.parse(cartItems) : [];
        console.log('Received cart items:', parsedCartItems);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ totalPrice –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
      if (totalPrice === undefined || totalPrice === null) {
        console.error('Total price is not defined');
        totalPrice = '–ù–µ —É–∫–∞–∑–∞–Ω–æ';  // –ï—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫—É
      } else {
        totalPrice = parseFloat(totalPrice).toFixed(2); // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
      }

      // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
      const TELEGRAM_BOT_TOKEN = '8049756630:AAHbPxs3rn6El7OfDxd1rmqxQA2PGJngktQ';
      const TELEGRAM_CHAT_ID = '-1002346852862';

      const cartItemsText = parsedCartItems
    .map((item, index) => `${index + 1}. ${item.text} - ${item.count}`)
    .join('\n');

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const message = `
üõí <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>
<b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> ${orderId}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phoneNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}
<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:</b> ${guestCount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
<b>–í—Ä–µ–º—è:</b> ${orderTime || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}
<b>–°—É–º–º–∞:</b> ${totalPrice} ‚ÇΩ

<b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:</b>
${cartItemsText}
`;

      try {

        const response = await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML',
        });

        console.log('Telegram response:', response.data);

        
        return {
          statusCode: 200,
          body: JSON.stringify({ message: 'Telegram notification sent' }),
        };
      } catch (error) {

        console.error('Error sending message to Telegram:', error.response ? error.response.data : error.message);
        return {
          statusCode: 500,
          body: JSON.stringify({ message: 'Error sending notification to Telegram', error: error.message }),
        };
      }
    } else {
      // –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π
      return {
        statusCode: 200,
        body: JSON.stringify({ message: 'Payment not completed successfully' }),
      };
    }
  }

  // –ï—Å–ª–∏ –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ POST
  return {
    statusCode: 405,
    body: JSON.stringify({ message: 'Method Not Allowed' }),
  };
};
