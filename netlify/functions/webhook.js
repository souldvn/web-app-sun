const axios = require('axios');

exports.handler = async (event, context) => {
  if (event.httpMethod === 'POST') {
    const paymentData = JSON.parse(event.body);
    console.log('Received payment data:', paymentData);

    if (paymentData.event === 'payment.succeeded') {
      const { phoneNumber, guestCount, orderTime, comment, orderId, cartItems, orderType } = paymentData.object.metadata;
      let totalPrice = paymentData.object.amount.value;

      const parsedCartItems = cartItems ? JSON.parse(cartItems) : [];
      console.log('Received cart items:', parsedCartItems);

      if (totalPrice === undefined || totalPrice === null) {
        console.error('Total price is not defined');
        totalPrice = '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
      } else {
        totalPrice = parseFloat(totalPrice).toFixed(2);
      }

      const TELEGRAM_BOT_TOKEN = '8049756630:AAHbPxs3rn6El7OfDxd1rmqxQA2PGJngktQ';
      const TELEGRAM_CHAT_ID = '-1002346852862';

      const cartItemsText = parsedCartItems
        .map((item, index) => `${index + 1}. ${item.text} - ${item.count} —à—Ç.`)
        .join('\n');

      const message = `
üì¶ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:</b>
üÜî –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${orderId}
üìã –†–µ–∂–∏–º –∑–∞–∫–∞–∑–∞: ${orderType === 'delivery' ? 'üöö –î–æ—Å—Ç–∞–≤–∫–∞' : 'üè† –í —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ'}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phoneNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üë• –ì–æ—Å—Ç–∏: ${orderType === '–í —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ' ? guestCount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ' : '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'}
‚è∞ –í—Ä–µ–º—è: ${orderTime || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}
üí∞ –°—É–º–º–∞: ${totalPrice} ‚ÇΩ
üç¥ <b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã:</b>
${cartItemsText}
`;

      try {
        const response = await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML',
        });

        console.log('Telegram response:', response.data);

        return {
          statusCode: 200,
          body: JSON.stringify({ message: 'Telegram notification sent' }),
        };
      } catch (error) {
        console.error('Error sending message to Telegram:', error.response ? error.response.data : error.message);
        return {
          statusCode: 500,
          body: JSON.stringify({ message: 'Error sending notification to Telegram', error: error.message }),
        };
      }
    } else {
      return {
        statusCode: 200,
        body: JSON.stringify({ message: 'Payment not completed successfully' }),
      };
    }
  }

  return {
    statusCode: 405,
    body: JSON.stringify({ message: 'Method Not Allowed' }),
  };
};
